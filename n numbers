import tkinter as tk

def calculate_average(marks):
    return sum(marks) / len(marks)

def display_student_info(name, age, location, subject_marks):
    result_text.delete(1.0, tk.END)
    result_text.insert(tk.END,
        f"\nStudent Information:\nName: {name}\nAge: {age}\nLocation: {location}\n\nSubject Marks:\n" +
        "\n".join([f"Subject {i + 1}: {mark}" for i, mark in enumerate(subject_marks)]) +
        f"\n\nAverage Marks: {calculate_average(subject_marks):.2f}\n"
    )

    # Determine performance
    average_marks = calculate_average(subject_marks)
    if average_marks < 0:
        result_text.insert(tk.END, "Performance: Below Average")
    elif 0.5 <= average_marks < 0:
        result_text.insert(tk.END, "Performance: Average")
    else:
        result_text.insert(tk.END, "Performance: Above Average")

def on_submit():
    name_val = name_entry.get()
    age_val = age_entry.get()
    location_val = location_entry.get()
    subject_marks_val = [float(mark.get()) for mark in subject_entries]

    display_student_info(name_val, age_val, location_val, subject_marks_val)

# Create GUI window
window = tk.Tk()
window.title("Student Information")

# Entry widgets
name_label = tk.Label(window, text="Name:")
name_entry = tk.Entry(window)

age_label = tk.Label(window, text="Age:")
age_entry = tk.Entry(window)

location_label = tk.Label(window, text="Location:")
location_entry = tk.Entry(window)

subject_labels = [tk.Label(window, text=f"Subject {i + 1}:") for i in range(4)]
subject_entries = [tk.Entry(window) for _ in range(4)]

# Display button
submit_button = tk.Button(window, text="Display Information", command=on_submit)

# Display result
result_text = tk.Text(window, height=20, width=50)

# Layout
name_label.grid(row=0, column=0, padx=5, pady=5, sticky="E")
name_entry.grid(row=0, column=1, padx=5, pady=5, sticky="W")

age_label.grid(row=1, column=0, padx=5, pady=5, sticky="E")
age_entry.grid(row=1, column=1, padx=5, pady=5, sticky="W")

location_label.grid(row=2, column=0, padx=5, pady=5, sticky="E")
location_entry.grid(row=2, column=1, padx=5, pady=5, sticky="W")

for i, (label, entry) in enumerate(zip(subject_labels, subject_entries)):
    label.grid(row=3 + i, column=0, padx=5, pady=5, sticky="E")
    entry.grid(row=3 + i, column=1, padx=5, pady=5, sticky="W")

submit_button.grid(row=7, column=0, columnspan=2, pady=10)

result_text.grid(row=8, column=0, columnspan=2, pady=10)

# Run the GUI
window.mainloop()
